{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","components/App.js","index.js"],"names":["Note","note","toggleImportance","label","important","content","onClick","baseUrl","getAll","a","axios","get","data","nonExisting","id","date","fake","concat","create","newObj","post","update","put","Notification","message","className","Footer","style","color","fontStyle","fontSize","App","props","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","getNotes","addNote","e","preventDefault","noteObject","Date","toISOString","noteToShow","filter","find","n","changedNote","updatedNotes","map","setTimeout","onSubmit","type","value","onChange","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.95e34c8d.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ note, toggleImportance }) => {\n    const label = note.important ? 'make not important' : 'make important';\n\n    return (\n      <li>\n        {note.content}\n        <button onClick={toggleImportance}>{label}</button>\n      </li>\n    )\n  }\n\nexport default Note;  ","import axios from 'axios';\nconst baseUrl = '/api/notes';\n\nconst getAll = async () => {\n    const { data } = await axios.get(baseUrl)\n    const nonExisting = {\n        id: 10000,\n        content: 'This note is not saved to server',\n        date: '2019-05-30T17:30:31.098Z',\n        important: true,\n    }\n    const fake = data.concat(nonExisting);\n    return fake;\n}\n\nconst create = async (newObj) => {\n    const { data } = await axios.post(baseUrl, newObj);\n    return data;\n}\n\nconst update = async (id, newObj) => {\n    const { data } = await axios.put(`${baseUrl}/${id}`, newObj);\n    return data;\n}\n\nexport default {\n    getAll,\n    create,\n    update\n};\n","import React from 'react'\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n        return null;\n    }\n\n    return (\n        <div className=\"error\">\n            { message }\n        </div>\n    )\n}\n\nexport default Notification;","import React, {useState, useEffect} from 'react'\nimport Note from './Note';\nimport noteService from '../services/notes';\nimport Notification from './Notification';\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Note app, Department of Computer Science, University of Helsinki 2020</em>\n    </div>\n  )\n}\n\nconst App = (props) => {\n    const [notes, setNotes] = useState([]);\n    const [newNote, setNewNote] = useState('');\n    const [showAll, setShowAll] = useState(true);\n    const [errorMessage, setErrorMessage] = useState(null);\n\n    useEffect(() => {\n      const getNotes = async () => {\n        const data = await noteService.getAll();\n        setNotes(data);\n      }\n      getNotes();\n    }, []);\n\n    const addNote = async (e) => {\n      e.preventDefault();\n      const noteObject = {\n        content: newNote,\n        date: new Date().toISOString(),\n        important: false\n      }\n      const data = await noteService.create(noteObject);\n      setNotes([...notes, data])\n      setNewNote('');\n    }\n\n    const noteToShow = showAll ? notes : notes.filter(note => note.important);\n\n    const toggleImportance = async (id) => {\n      const note = notes.find(n => n.id === id);\n      const changedNote = {...note, important: !note.important};\n      try {\n        const data = await noteService.update(id, changedNote);\n        let updatedNotes = notes.map(note => note.id === id ? data : note)\n        setNotes(updatedNotes);\n      } catch(e) {\n        setErrorMessage('The note has already been deleted from the server');\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n        setNotes(notes.filter(n => n.id !== id));\n      }\n    }\n\n    return (\n      <div>\n        <h1>Notes</h1>\n        <Notification message={errorMessage} />\n        <div>\n          <button onClick={() => setShowAll(!showAll)}>{showAll ? 'Show important' : 'Show all'}</button>\n        </div>\n        <ul>\n          {noteToShow.map((note) => <Note key={note.id} note={note} toggleImportance={() => toggleImportance(note.id)} />)}\n        </ul>\n        <form onSubmit={addNote}>\n          <input type=\"text\" value={newNote} onChange={(e) => setNewNote(e.target.value)} />\n          <button type=\"submit\">Save</button>\n        </form>\n        <Footer />\n      </div>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}